
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// Create display object
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Bitmap Frame1 (monochrome 128x64 pixels)
const unsigned char Frame1[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xe0, 0x00, 0x0f, 0xc0, 0x00, 0x7f, 0xff, 0x81, 0xe1, 0xf8, 0x00, 0x07, 0xc0, 
	0x00, 0x1f, 0xff, 0xf8, 0x00, 0x1f, 0xf0, 0x01, 0xff, 0xff, 0x81, 0xe1, 0xf8, 0x00, 0x0f, 0xc0, 
	0x00, 0x1f, 0xff, 0xfc, 0x00, 0x3f, 0xf0, 0x03, 0xff, 0xff, 0x81, 0xe0, 0xf8, 0x00, 0x0f, 0x80, 
	0x00, 0x1f, 0xff, 0xfc, 0x00, 0x3f, 0xf8, 0x03, 0xff, 0xff, 0x81, 0xe0, 0xfc, 0x00, 0x0f, 0x80, 
	0x00, 0x1f, 0xff, 0xfe, 0x00, 0x7f, 0xf8, 0x07, 0xff, 0xff, 0x81, 0xe0, 0x7c, 0x00, 0x1f, 0x80, 
	0x00, 0x00, 0x00, 0x3e, 0x00, 0x7c, 0xf8, 0x07, 0xc0, 0x00, 0x01, 0xe0, 0x7c, 0x00, 0x1f, 0x00, 
	0x00, 0x00, 0x00, 0x3e, 0x00, 0xfc, 0x7c, 0x07, 0xc0, 0x00, 0x01, 0xe0, 0x7e, 0x00, 0x1f, 0x00, 
	0x00, 0x00, 0x00, 0x3e, 0x00, 0xf8, 0x7c, 0x07, 0x80, 0x00, 0x01, 0xe0, 0x3e, 0x00, 0x3f, 0x00, 
	0x00, 0x00, 0x00, 0x3e, 0x00, 0xf8, 0x7e, 0x07, 0xc0, 0x00, 0x01, 0xe0, 0x3e, 0x00, 0x3e, 0x00, 
	0x00, 0x00, 0x00, 0x7e, 0x01, 0xf0, 0x3e, 0x07, 0xc0, 0x00, 0x01, 0xe0, 0x1f, 0x00, 0x3e, 0x00, 
	0x00, 0x03, 0xff, 0xfc, 0x01, 0xf0, 0x3e, 0x07, 0xc0, 0x00, 0x01, 0xe0, 0x1f, 0x00, 0x7e, 0x00, 
	0x00, 0x0f, 0xff, 0xfc, 0x03, 0xf0, 0x3f, 0x07, 0xff, 0xfe, 0x01, 0xe0, 0x1f, 0x80, 0x7c, 0x00, 
	0x00, 0x1f, 0xff, 0xf8, 0x03, 0xe0, 0x1f, 0x03, 0xff, 0xff, 0x01, 0xe0, 0x0f, 0x80, 0x7c, 0x00, 
	0x00, 0x3f, 0xff, 0xf0, 0x03, 0xe0, 0x1f, 0x01, 0xff, 0xff, 0x81, 0xe0, 0x0f, 0x80, 0xfc, 0x00, 
	0x00, 0x3f, 0xff, 0xc0, 0x07, 0xe0, 0x0f, 0x80, 0xff, 0xff, 0x81, 0xe0, 0x0f, 0xc0, 0xf8, 0x00, 
	0x00, 0x7e, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0x80, 0x3f, 0xff, 0x81, 0xe0, 0x07, 0xc0, 0xf8, 0x00, 
	0x00, 0x7c, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0xc0, 0x00, 0x0f, 0x81, 0xe0, 0x07, 0xc1, 0xf0, 0x00, 
	0x00, 0x7c, 0x00, 0x00, 0x0f, 0xc0, 0x07, 0xc0, 0x00, 0x0f, 0x81, 0xe0, 0x03, 0xe1, 0xf0, 0x00, 
	0x00, 0x7c, 0x00, 0x00, 0x0f, 0x80, 0x07, 0xc0, 0x00, 0x0f, 0x81, 0xe0, 0x03, 0xe1, 0xf0, 0x00, 
	0x00, 0x7c, 0x00, 0x00, 0x0f, 0x80, 0x07, 0xe0, 0x00, 0x0f, 0x81, 0xe0, 0x03, 0xf3, 0xe0, 0x00, 
	0x00, 0x7f, 0xff, 0xfc, 0x1f, 0x80, 0x03, 0xe0, 0x00, 0x0f, 0x81, 0xe0, 0x01, 0xf3, 0xe0, 0x00, 
	0x00, 0x3f, 0xff, 0xfe, 0x1f, 0x00, 0x03, 0xf0, 0x00, 0x0f, 0x81, 0xe0, 0x01, 0xff, 0xe0, 0x00, 
	0x00, 0x3f, 0xff, 0xfe, 0x3f, 0x00, 0x01, 0xf0, 0x00, 0x0f, 0x81, 0xe0, 0x01, 0xff, 0xc0, 0x00, 
	0x00, 0x1f, 0xff, 0xfe, 0x3e, 0x00, 0x01, 0xf8, 0x00, 0x0f, 0x81, 0xe0, 0x00, 0xff, 0xc0, 0x00, 
	0x00, 0x07, 0xff, 0xfe, 0x3e, 0x00, 0x00, 0xf8, 0x00, 0x0f, 0x81, 0xe0, 0x00, 0x7f, 0x80, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Bitmap Frame2 (monochrome 128x64 pixels)
const unsigned char Frame2[] PROGMEM = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0xc0, 0x00, 0x00, 
	0x03, 0x00, 0x7c, 0x03, 0xff, 0x7f, 0xff, 0x38, 0x07, 0x3f, 0xf0, 0xfe, 0x07, 0xf9, 0xe0, 0x70, 
	0x07, 0x80, 0xfe, 0x03, 0xff, 0x7f, 0xff, 0x3c, 0x0f, 0x3f, 0xf1, 0xff, 0x0f, 0xfc, 0xe0, 0xf0, 
	0x07, 0xe1, 0xff, 0x03, 0xff, 0x7f, 0xff, 0x3c, 0x0f, 0x3f, 0xf3, 0xff, 0x9f, 0xfe, 0xf0, 0xe0, 
	0x07, 0xf1, 0xcf, 0x00, 0x07, 0x07, 0x0f, 0x3e, 0x1f, 0x00, 0x73, 0x87, 0xbc, 0x1e, 0x71, 0xe0, 
	0x07, 0xf3, 0xc7, 0x00, 0x07, 0x07, 0x0f, 0x3e, 0x1f, 0x00, 0x73, 0x07, 0xb8, 0x0f, 0x79, 0xc0, 
	0x07, 0x03, 0x87, 0x80, 0x07, 0x07, 0x0f, 0x3f, 0x3b, 0x00, 0x70, 0x0f, 0xb8, 0x07, 0x3b, 0x80, 
	0x07, 0x03, 0x87, 0x81, 0xff, 0x07, 0x0f, 0x3f, 0xf3, 0x1f, 0xf0, 0x7f, 0x38, 0x07, 0x3f, 0x80, 
	0x07, 0x03, 0x87, 0x83, 0xff, 0x07, 0x0f, 0x3b, 0xf3, 0x3f, 0xf1, 0xfe, 0x38, 0x07, 0x1f, 0x00, 
	0x07, 0x03, 0x87, 0x81, 0xff, 0x07, 0x0f, 0x3b, 0xe3, 0x3f, 0xf3, 0xf0, 0x38, 0x07, 0x0f, 0x00, 
	0x07, 0x03, 0x87, 0x80, 0x07, 0x07, 0x0f, 0x39, 0xe3, 0x00, 0x77, 0x80, 0x38, 0x07, 0x0e, 0x00, 
	0x07, 0x03, 0xc7, 0x80, 0x07, 0x07, 0x0f, 0x38, 0xc3, 0x00, 0x77, 0x03, 0xb8, 0x0f, 0x0e, 0x00, 
	0x07, 0x03, 0xc7, 0x00, 0x07, 0x07, 0x0f, 0x38, 0x03, 0x00, 0x77, 0x03, 0xbc, 0x0e, 0x0e, 0x00, 
	0x07, 0x01, 0xcf, 0x00, 0x07, 0x07, 0x0f, 0x38, 0x03, 0x00, 0x77, 0x87, 0x9e, 0x1e, 0x0e, 0x00, 
	0x07, 0x01, 0xfe, 0x03, 0xff, 0x07, 0x0f, 0x38, 0x03, 0x3f, 0xf3, 0xff, 0x1f, 0xfc, 0x0e, 0x00, 
	0x07, 0x00, 0xfc, 0x03, 0xff, 0x07, 0x0f, 0x38, 0x03, 0x3f, 0xf1, 0xfe, 0x07, 0xf8, 0x0e, 0x00, 
	0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x01, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char Frame3[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x24, 0x92, 0x48, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xc9, 0x24, 0x93, 0x4d, 0xb3, 0x32, 0x49, 0x24, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1a, 0x49, 0x24, 0x10, 0x04, 0x49, 0x22, 0x10, 0x20, 0xc9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xa2, 0x49, 0x24, 0x92, 0x64, 0x88, 0x88, 0xc2, 0x46, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0xe9, 0x24, 0x92, 0x49, 0x12, 0x22, 0x24, 0x09, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 
	0xb9, 0x24, 0x92, 0x49, 0x12, 0x44, 0x84, 0x91, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x40, 
	0xde, 0x49, 0x24, 0x92, 0x48, 0x90, 0x92, 0x44, 0x66, 0x00, 0x00, 0x00, 0x00, 0x03, 0x58, 0x00, 
	0x77, 0xc9, 0x24, 0x92, 0x44, 0x92, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x52, 0x00, 
	0xad, 0xf6, 0x49, 0x24, 0x94, 0x44, 0x8c, 0x92, 0x88, 0x00, 0x00, 0x00, 0x03, 0xc9, 0xa2, 0x00, 
	0xaf, 0x37, 0xd9, 0x24, 0x91, 0x24, 0x41, 0x08, 0x90, 0x00, 0x02, 0x00, 0x5e, 0x37, 0x28, 0x00, 
	0x19, 0xec, 0xb6, 0xc9, 0x66, 0xc9, 0x73, 0x62, 0x55, 0xf0, 0x20, 0x13, 0x64, 0xe4, 0x40, 0x00, 
	0x76, 0xee, 0xe6, 0xdb, 0x6e, 0x99, 0x8e, 0x1a, 0x65, 0x06, 0xad, 0xec, 0x99, 0x88, 0x90, 0x00, 
	0x47, 0x9b, 0x9b, 0x36, 0x99, 0xb6, 0xe0, 0xc0, 0x8c, 0x3c, 0x89, 0x24, 0x92, 0x0b, 0x00, 0x00, 
	0x09, 0x7d, 0xb9, 0x64, 0xf5, 0x2f, 0xb3, 0x25, 0x32, 0xdb, 0x52, 0x93, 0x66, 0x30, 0x40, 0x00, 
	0x29, 0x67, 0x66, 0xdb, 0xb7, 0x6e, 0xcd, 0x99, 0x36, 0xcb, 0x72, 0xfc, 0x48, 0xc6, 0x00, 0x00, 
	0x04, 0xbe, 0xde, 0x86, 0xec, 0xdb, 0x7c, 0xd2, 0xcd, 0xb6, 0xcd, 0x29, 0x9b, 0x08, 0x80, 0x00, 
	0x13, 0x9a, 0xdc, 0xfd, 0xec, 0xdd, 0xb3, 0x66, 0x59, 0xbd, 0xa9, 0x7b, 0xb2, 0x20, 0x00, 0x00, 
	0x00, 0x4b, 0x73, 0xbf, 0xb3, 0x75, 0xaf, 0x2d, 0x36, 0x65, 0x3a, 0xd6, 0x64, 0x80, 0x00, 0x00, 
	0x04, 0x27, 0x6f, 0xb2, 0x7f, 0xb7, 0x6c, 0xd9, 0xa5, 0x9b, 0xd7, 0xb7, 0x4d, 0x90, 0x00, 0x00, 
	0x10, 0x8d, 0xee, 0x44, 0xd6, 0xee, 0xd3, 0xd2, 0xcc, 0xca, 0xdd, 0x60, 0x12, 0x50, 0x00, 0x00, 
	0x00, 0x0f, 0xb0, 0x00, 0x13, 0x7e, 0xdb, 0x36, 0x13, 0x26, 0x6d, 0x08, 0x00, 0x40, 0x00, 0x00, 
	0x00, 0x06, 0x24, 0x88, 0x00, 0xdb, 0xe6, 0x65, 0xb4, 0x1d, 0xe8, 0x00, 0x01, 0x24, 0x00, 0x00, 
	0x00, 0x15, 0xed, 0x20, 0x00, 0x37, 0xbc, 0xd9, 0x24, 0xd5, 0x80, 0x00, 0x10, 0x24, 0x00, 0x00, 
	0x00, 0x35, 0x19, 0x02, 0x00, 0x0d, 0xb3, 0x9a, 0x4b, 0x37, 0x80, 0x00, 0x04, 0x92, 0x00, 0x00, 
	0x00, 0x49, 0xf0, 0x01, 0x20, 0x4b, 0xeb, 0x62, 0xd8, 0x2a, 0x00, 0x10, 0x00, 0x90, 0x00, 0x00, 
	0x00, 0x4b, 0xe2, 0x20, 0x04, 0x07, 0x6e, 0x6d, 0x26, 0xae, 0x01, 0x00, 0x02, 0x24, 0x80, 0x00, 
	0xd0, 0x37, 0x68, 0x0c, 0x01, 0x25, 0xdd, 0x99, 0x32, 0x4c, 0x81, 0x01, 0x08, 0x2d, 0x00, 0x00, 
	0xcd, 0xb5, 0xd9, 0x00, 0x00, 0x45, 0xf1, 0xb0, 0xc9, 0x59, 0x00, 0x00, 0x01, 0x68, 0x40, 0x00, 
	0x24, 0x4c, 0xf6, 0x00, 0x00, 0x1b, 0x37, 0x26, 0x4d, 0x26, 0x40, 0x00, 0x02, 0x4a, 0x00, 0x00, 
	0x92, 0x43, 0x3e, 0xe0, 0x09, 0xa0, 0xc4, 0x49, 0x10, 0x24, 0x08, 0x00, 0x0b, 0xb4, 0x80, 0x00, 
	0x41, 0x9b, 0x43, 0xbf, 0xff, 0x26, 0x4c, 0xd9, 0xb2, 0x91, 0x26, 0xfb, 0xfc, 0x84, 0x00, 0x00, 
	0x0d, 0x6c, 0xcc, 0x96, 0xf6, 0x91, 0x33, 0x26, 0x22, 0x48, 0x13, 0x6e, 0x40, 0x41, 0x00, 0x00, 
	0xbb, 0x66, 0xba, 0x52, 0x24, 0xc4, 0xc9, 0x26, 0xcd, 0x02, 0x49, 0x24, 0x93, 0x18, 0x40, 0x00, 
	0xe4, 0x99, 0xa9, 0xc9, 0x99, 0x0a, 0x4c, 0xd9, 0x99, 0x24, 0x04, 0x99, 0x24, 0x80, 0x80, 0x00, 
	0x36, 0xb6, 0x65, 0x2c, 0x49, 0x39, 0x92, 0x4b, 0x32, 0x44, 0x92, 0x61, 0x24, 0x24, 0x80, 0x00, 
	0xd9, 0xb6, 0xdd, 0x91, 0x33, 0x25, 0x33, 0x36, 0x66, 0x90, 0x82, 0x06, 0x09, 0x20, 0x00, 0x00, 
	0xee, 0x49, 0x92, 0xd5, 0xa6, 0x6b, 0x4c, 0xd5, 0xcc, 0x82, 0x28, 0xc8, 0x62, 0x09, 0x00, 0x00, 
	0x38, 0x5b, 0x66, 0x64, 0xcc, 0xda, 0x52, 0x44, 0x91, 0x2a, 0x49, 0x11, 0x08, 0x40, 0x00, 0x00, 
	0x6d, 0x96, 0x4d, 0x9b, 0x1b, 0xb5, 0x93, 0x12, 0x99, 0x20, 0x95, 0x26, 0x41, 0x12, 0x00, 0x00, 
	0x17, 0xb4, 0x99, 0xb3, 0x7b, 0xed, 0x24, 0x92, 0x62, 0x41, 0x34, 0xc8, 0x14, 0x88, 0x00, 0x00, 
	0x96, 0x69, 0xb7, 0x66, 0x67, 0x39, 0x20, 0xc9, 0x08, 0x05, 0x62, 0x91, 0x92, 0x20, 0x00, 0x00, 
	0x81, 0xcb, 0x76, 0xdc, 0xcc, 0xff, 0xda, 0x29, 0x21, 0x36, 0x4a, 0x26, 0x49, 0x24, 0x00, 0x00, 
	0x21, 0x93, 0x6f, 0xbd, 0xdb, 0xd6, 0xdb, 0x24, 0xc4, 0xda, 0x99, 0x20, 0x24, 0x40, 0x00, 0x00, 
	0x66, 0x6c, 0xd9, 0xf3, 0xb7, 0x77, 0xec, 0xd2, 0x10, 0xca, 0xa4, 0x99, 0xa4, 0x80, 0x00, 0x00, 
	0xc8, 0x4d, 0xde, 0xde, 0xbd, 0x7d, 0xb6, 0x81, 0x23, 0x29, 0x32, 0xd3, 0x12, 0x10, 0x00, 0x00, 
	0xc9, 0x33, 0x37, 0xbd, 0xeb, 0xcf, 0x7b, 0x2c, 0x4f, 0x65, 0x92, 0x04, 0x49, 0x00, 0x00, 0x00, 
	0x34, 0xb6, 0xed, 0xe7, 0x6e, 0xfa, 0xdb, 0x62, 0x4c, 0x56, 0x46, 0x66, 0x49, 0x20, 0x00, 0x00, 
	0x64, 0x8e, 0xd9, 0x3f, 0x7f, 0x9e, 0xec, 0xd9, 0x99, 0xd2, 0x59, 0x98, 0x82, 0x00, 0x00, 0x00, 
	0x99, 0x39, 0x93, 0x79, 0xd9, 0x75, 0xa5, 0x91, 0x33, 0x29, 0x90, 0x00, 0x98, 0x80, 0x00, 0x00, 
	0x0b, 0x27, 0xb6, 0xc7, 0xb7, 0xed, 0xdd, 0x24, 0x66, 0x29, 0x26, 0xdb, 0x22, 0x00, 0x00, 0x00, 
	0x28, 0x62, 0x6c, 0xb6, 0xb6, 0x9b, 0x52, 0x64, 0x8c, 0xe6, 0x62, 0x00, 0x29, 0x00, 0x00, 0x00, 
	0x82, 0x8e, 0xfb, 0xac, 0xee, 0xf3, 0x32, 0x88, 0x91, 0x94, 0x89, 0x36, 0xe6, 0x40, 0x00, 0x00, 
	0x00, 0x19, 0x9b, 0x6d, 0x99, 0x6c, 0xcc, 0x9b, 0x52, 0x11, 0x89, 0x64, 0x94, 0x40, 0x00, 0x00, 
	0x25, 0x43, 0x6d, 0xdb, 0x73, 0xcd, 0x93, 0x32, 0x4c, 0xd2, 0x36, 0x99, 0x99, 0x90, 0x00, 0x00, 
	0x08, 0x06, 0x77, 0x7b, 0x6e, 0xb3, 0x3b, 0x66, 0xa9, 0x26, 0x64, 0xe6, 0x62, 0x10, 0x00, 0x00, 
	0x50, 0x19, 0x9b, 0x6e, 0xed, 0xbb, 0x6c, 0xcc, 0xb3, 0x2c, 0xcd, 0x9b, 0x26, 0x44, 0x00, 0x00, 
	0x00, 0x64, 0x9b, 0xb7, 0xbb, 0x6c, 0xe5, 0x99, 0x44, 0xc9, 0x99, 0x98, 0x98, 0x40, 0x00, 0x00, 
	0x09, 0x84, 0x36, 0xdc, 0xdb, 0x77, 0x9b, 0x33, 0x5c, 0x9b, 0x36, 0x66, 0xd1, 0x89, 0x00, 0x00, 
	0x64, 0x33, 0x67, 0x6f, 0x76, 0xd2, 0x5a, 0xe6, 0xb3, 0x66, 0x73, 0x32, 0x44, 0x32, 0x40, 0x00, 
	0x85, 0x6c, 0xd9, 0xbb, 0x6e, 0xde, 0xe6, 0xcc, 0xa6, 0x6c, 0xcc, 0xc9, 0x49, 0x02, 0x00, 0x00, 
	0x10, 0x00, 0x08, 0x00, 0x89, 0x21, 0x24, 0x19, 0x08, 0x81, 0x82, 0x49, 0x00, 0x48, 0x80, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {
  // Initialize the display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Infinite loop if display initialization fails
  }
  display.clearDisplay();

  // Draw initial frame
  display.drawBitmap(0, 0, Frame1, SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE);
  display.display();
  delay(9000); // Pause for 9 seconds
}

void loop() {
  // Animation example with slower transitions

  // Show Frame 1 with delay
  display.clearDisplay();
  display.drawBitmap(0, 0, Frame1, SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE);
  display.display();
  slowTransition(2000); // Pause with a smooth transition effect

  // Show Frame 2 with delay
  display.clearDisplay();
  display.drawBitmap(0, 0, Frame2, SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE);
  display.display();
  slowTransition(4000); // Pause with a smooth transition effect

  // Show Frame 3 with delay
  display.clearDisplay();
  display.drawBitmap(0, 0, Frame3, SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE);
  display.display();
  delay(10000000); // Long pause
}

// Function for a slow transition effect
void slowTransition(int duration) {
  int steps = 200; // Number of steps for the transition
  int stepDelay = duration / steps;

  for (int i = 0; i < steps; i++) {
    delay(stepDelay); // Adjust the delay to achieve the desired speed
  }
}

